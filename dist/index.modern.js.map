{"version":3,"file":"index.modern.js","sources":["../src/createStorageHook.ts","../src/StorageService.ts"],"sourcesContent":["import { useState, useCallback, SetStateAction, useEffect } from 'react';\nimport StorageService from './StorageService';\n\nconst createStorageHook = (storageService: StorageService) => {\n  const useStorage = <TValue>(\n    storageKey: string,\n    initialData: TValue | null = null,\n  ) => {\n    const [data, setData] = useState(\n      () => storageService.getData<TValue>(storageKey) || initialData,\n    );\n\n    const updateStorageData = useCallback(\n      (setStateAction: SetStateAction<TValue | null>) => {\n        setData(prevData => {\n          const newData =\n            setStateAction instanceof Function\n              ? setStateAction(prevData)\n              : setStateAction;\n          storageService.setData(storageKey, newData);\n          return newData;\n        });\n      },\n      [storageKey],\n    );\n\n    useEffect(() => {\n      const storageData = storageService.getData(storageKey);\n\n      if (\n        initialData !== undefined &&\n        initialData !== null &&\n        storageData === null\n      ) {\n        storageService.setData(storageKey, initialData);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [storageKey]);\n\n    useEffect(() => {\n      const unsubscribe = storageService.subscribe(\n        ({ key, newValue, storageArea }) => {\n          if (storageArea === storageService.storage && key === storageKey) {\n            setData(storageService.deserialize<TValue>(newValue));\n          }\n        },\n      );\n\n      return () => unsubscribe();\n    }, [storageKey]);\n\n    return [data, updateStorageData] as const;\n  };\n\n  return useStorage;\n};\n\nexport default createStorageHook;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-useless-constructor */\nconst storageEventName = 'storage';\n\nconst defaultSerialize: Deserialize = text => {\n  if (text === null || text === undefined) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch {\n    return null;\n  }\n};\n\nexport default class StorageService {\n  get deserialize() {\n    return this._deserialize;\n  }\n\n  get serialize() {\n    return this._serialize;\n  }\n\n  get storage() {\n    return this._storage;\n  }\n\n  constructor(\n    private _storage: Storage,\n    private _serialize: (o: unknown) => string = JSON.stringify,\n    private _deserialize: Deserialize = defaultSerialize,\n  ) {}\n\n  getData = <TData>(key: string) =>\n    this.deserialize<TData>(this.storage.getItem(key));\n\n  removeData = (key: string) => {\n    this.storage.removeItem(key);\n    this.raiseEvent({ key, newValue: '' });\n  };\n\n  setData = <TData>(key: string, data: TData) => {\n    const newValue = this.serialize(data);\n    this.storage.setItem(key, newValue);\n    this.raiseEvent({ key, newValue });\n  };\n\n  subscribe = (\n    handler: (event: {\n      storageArea: Storage | null;\n      key: string | null;\n      newValue: string | null;\n    }) => void,\n  ) => {\n    const listener = ({ storageArea, key, newValue }: StorageEvent) =>\n      handler?.({ storageArea, key, newValue });\n    window.addEventListener(storageEventName, listener);\n\n    return () => window.removeEventListener(storageEventName, listener);\n  };\n\n  private raiseEvent({ key, newValue }: { key: string; newValue: string }) {\n    window.dispatchEvent(\n      new StorageEvent(storageEventName, {\n        key,\n        newValue,\n        storageArea: this.storage,\n      }),\n    );\n  }\n}\n\nexport type Deserialize = <TData>(\n  text: string | null | undefined,\n) => TData | null;\n"],"names":["createStorageHook","storageService","storageKey","initialData","useState","getData","data","setData","updateStorageData","useCallback","setStateAction","prevData","newData","Function","useEffect","storageData","unsubscribe","subscribe","storageArea","storage","key","deserialize","newValue","defaultSerialize","text","JSON","parse","StorageService","_storage","_serialize","_deserialize","stringify","this","_this","getItem","removeItem","raiseEvent","serialize","setItem","handler","listener","window","addEventListener","removeEventListener","dispatchEvent","StorageEvent"],"mappings":"iEAGA,IAAMA,EAAoB,SAACC,GAmDzB,OAlDmB,SACjBC,EACAC,YAAAA,IAAAA,EAA6B,YAELC,EACtB,kBAAMH,EAAeI,QAAgBH,IAAeC,IAD/CG,OAAMC,OAIPC,EAAoBC,EACxB,SAACC,GACCH,EAAQ,SAAAI,GACN,IAAMC,EACJF,aAA0BG,SACtBH,EAAeC,GACfD,EAEN,OADAT,EAAeM,QAAQL,EAAYU,GAC5BA,KAGX,CAACV,IA4BH,OAzBAY,EAAU,WACR,IAAMC,EAAcd,EAAeI,QAAQH,GAGzCC,MAAAA,GAEgB,OAAhBY,GAEAd,EAAeM,QAAQL,EAAYC,IAGpC,CAACD,IAEJY,EAAU,WACR,IAAME,EAAcf,EAAegB,UACjC,cAAkBC,cACIjB,EAAekB,WADlCC,MACqDlB,GACpDK,EAAQN,EAAeoB,cAFnBC,aAOV,yBAAaN,MACZ,CAACd,IAEG,CAACI,EAAME,KC/CZe,EAAgC,SAAAC,GACpC,GAAIA,MAAAA,EACF,YAGF,IACE,OAAOC,KAAKC,MAAMF,GAClB,SACA,cAIiBG,aAanB,WACUC,EACAC,EACAC,uBADAD,IAAAA,EAAqCJ,KAAKM,oBAC1CD,IAAAA,EAA4BP,GAF5BS,cAAAJ,EACAI,gBAAAH,EACAG,kBAAAF,EAGVE,aAAU,SAAQZ,UAChBa,EAAKZ,YAAmBY,EAAKd,QAAQe,QAAQd,KAE/CY,gBAAa,SAACZ,GACZa,EAAKd,QAAQgB,WAAWf,GACxBa,EAAKG,WAAW,CAAEhB,IAAAA,EAAKE,SAAU,MAGnCU,aAAU,SAAQZ,EAAad,GAC7B,IAAMgB,EAAWW,EAAKI,UAAU/B,GAChC2B,EAAKd,QAAQmB,QAAQlB,EAAKE,GAC1BW,EAAKG,WAAW,CAAEhB,IAAAA,EAAKE,SAAAA,KAGzBU,eAAY,SACVO,GAMA,IAAMC,EAAW,yBACfD,SAAAA,EAAU,CAAErB,cADMA,YACOE,MADMA,IACDE,WADMA,YAItC,OAFAmB,OAAOC,iBAxDc,UAwDqBF,qBAE7BC,OAAOE,oBA1DC,UA0DqCH,8BAGpDJ,WAAA,YACNK,OAAOG,cACL,IAAIC,aA/De,UA+DgB,CACjCzB,MAHeA,IAIfE,WAJoBA,SAKpBJ,YAAac,KAAKb,kDAlDtB,YAAYW,+CAIZ,YAAYD,2CAIZ,YAAYD"}